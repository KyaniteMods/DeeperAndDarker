plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.165'
}
tasks.named('wrapper', Wrapper).configure { distributionType = Wrapper.DistributionType.BIN }

version = "neoforge-${minecraft_version}-${mod_version}"
group = mod_group_id
base { archivesName = mod_id }

java.toolchain.languageVersion = JavaLanguageVersion.of(21)
minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')
runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'
        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }
configurations { runtimeClasspath.extendsFrom localRuntime }

repositories {
    mavenLocal()
    maven { url = "https://modmaven.dev" }
    maven { url = "https://maven.terraformersmc.com/" }
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"

    compileOnly "mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"
    compileOnly "mezz.jei:jei-${minecraft_version}-neoforge-api:${jei_version}"
    localRuntime "mezz.jei:jei-${minecraft_version}-neoforge:${jei_version}"

    compileOnly "dev.emi:emi-neoforge:${emi_version}+${minecraft_version}:api"
    localRuntime "dev.emi:emi-neoforge:${emi_version}+${minecraft_version}"
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_credits            : mod_credits,
            mod_description        : mod_description
    ]
    inputs.properties replaceProperties
    filesMatching(['META-INF/neoforge.mods.toml']) { expand replaceProperties }
}

publishing {
    publications {
        register('mavenJava', MavenPublication) { from components.java }
    }
    repositories {
        maven { url "file://${project.projectDir}/repo" }
    }
}

tasks.withType(JavaCompile).configureEach { options.encoding = 'UTF-8' }
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
